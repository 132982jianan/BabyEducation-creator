{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,iBAAiB,GAAG,EAAE,CAAC,KAAK,CAAC;AAC7B,QAAI,EAAE,mBAAmB;AACzB,cAAU,EAAE;AACR,iBAAS,EAAE,CAAC;AACZ,gBAAQ,EAAE,CAAC;AACX,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;KACV;CACJ,CAAC,CAAC;;AAEH,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,mBAAW,EAAE;AACT,uBAAS,EAAE;AACX,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;AACD,kBAAU,EAAE;AACR,uBAAS,EAAE;AACX,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;;AAED,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;AACD,qBAAa,EAAE,CAAC;AAChB,iBAAS,EAAE,CAAC;;AAEZ,uBAAe,EAAE;AACb,uBAAS,EAAE;AACX,gBAAI,EAAE,iBAAiB;SAC1B;AACD,mBAAW,EAAE,GAAG;KACnB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,eAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC/B,YAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;AAC1D,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AAChE,YAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;;AAEnC,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAA,UAAS,KAAK,EAAE;AACvC,gBAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;AACvB,uBAAO;aACV;;AAED,gBAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,gBAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;AAC3C,gBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AAC/D,gBAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACxB,qBAAK,CAAC,eAAe,EAAE,CAAC;aAC3B;SACJ,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEd,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAA,UAAS,KAAK,EAAE;AACtC,gBAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;AACvB,uBAAO;aACV;;AAED,gBAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AAC/D,gBAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC3B,gBAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACpB,gBAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEpE,gBAAI,SAAS,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;;AAEpC,gBAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;;AAE1E,gBAAG,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,IAAI,GAAG,EAAE;;AAC/C,oBAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;aAClC;SAEJ,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEd,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzD,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/D;;AAED,eAAW,EAAE,qBAAS,aAAa,EAAE;AACjC,YAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAChG,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,YAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC1E,YAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACvC,YAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAA,YAAW,EACrC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;;AAEpB,YAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC1C,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC5B;;AAED,kBAAc,EAAE,0BAAW;;AAEvB,YAAG,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;AACxB,gBAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,gBAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;SACtC;AACD,YAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;KAC5C;;AAED,iBAAa,EAAE,uBAAS,CAAC,EAAE,CAAC,EAAE;AAC1B,YAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,YAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAChB,YAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACnB;;AAED,aAAS,EAAE,qBAAW;AAClB,YAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACvC,YAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAA,YAAW;AAC9B,gBAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACzB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AACpB,YAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AACjC,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACzB,YAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACxB,YAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;AACnC,eAAO,GAAG,CAAC;KACd;;AAED,oBAAgB,EAAE,4BAAW;AACzB,eAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAChC,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;KACxB;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var decorative_params = cc.Class({\r\n    name: 'decorative_params',\r\n    properties: {\r\n        main_type: 0,\r\n        sub_type: 0,\r\n        xpos: 0,\r\n        ypos: 0,\r\n    }\r\n});\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        front_items: {\r\n            default: [],\r\n            type: cc.Prefab,\r\n        },\r\n        back_items: {\r\n            default: [],\r\n            type: cc.Prefab,\r\n        },\r\n        \r\n        dst_pos: {\r\n            default: null,\r\n            type: cc.Vec2,\r\n        },\r\n        car_part_type: 0,\r\n        main_type: 0,\r\n        \r\n        decorative_item: {\r\n            default: [],\r\n            type: decorative_params,\r\n        },\r\n        start_scale: 1.0,\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n        console.log(\"car part onload\");\r\n        this.move_hit = false;\r\n        this.dst_root = cc.find(\"UI_ROOT/anchor-center/car_root\");\r\n        this.game_scene = cc.find(\"UI_ROOT\").getComponent(\"game_scene\");\r\n        this.node.scale = this.start_scale;\r\n        \r\n        this.node.on('touchstart', function(event) {\r\n            if(this.move_hit === true) {\r\n                return;\r\n            }\r\n            \r\n            this.move_hit = false;\r\n            var bound_box = this.node.getBoundingBox(); \r\n            var pos = this.node.getParent().convertTouchToNodeSpace(event);\r\n            if(bound_box.contains(pos)) {\r\n                event.stopPropagation();\r\n            }\r\n        }.bind(this));\r\n        \r\n        this.node.on('touchmove', function(event) {\r\n            if(this.move_hit === true) {\r\n                return;\r\n            }\r\n            \r\n            var pos = this.node.getParent().convertTouchToNodeSpace(event);\r\n            this.node.setPosition(pos);\r\n            this.node.scale = 1;\r\n            var world_dst_pos = this.dst_root.convertToWorldSpace(this.dst_pos);\r\n            \r\n            var world_pos = event.getLocation();\r\n            // 绘制提示\r\n            this.game_scene.show_game_tip_car_part(this.car_part_type, world_dst_pos);\r\n            // end \r\n            if(cc.pDistance(world_pos, world_dst_pos) <= 200) { //\r\n               this.on_hit_item(world_dst_pos);\r\n            }\r\n            \r\n        }.bind(this));\r\n        \r\n        this.node.on('touchend', this.on_touch_ended.bind(this));\r\n        this.node.on('touchcancel', this.on_touch_ended.bind(this));\r\n    },\r\n    \r\n    on_hit_item: function(world_dst_pos) {\r\n        var delay_time = this.game_scene.change_car_part(this.node, this.car_part_type, this.main_type);\r\n        this.move_hit = true;\r\n        var local_pos = this.node.getParent().convertToNodeSpaceAR(world_dst_pos);\r\n        var moveby = cc.moveTo(0.2, local_pos);\r\n        var callback = cc.callFunc(function() {\r\n        }.bind(this), this);\r\n        \r\n        var seq = cc.sequence([moveby, callback]);\r\n        this.node.runAction(seq);\r\n    },\r\n    \r\n    on_touch_ended: function() { \r\n        // this.node.opacity = 255;\r\n        if(this.move_hit === false) {\r\n            this.node.setPosition(this.start_pos);\r\n            this.node.scale = this.start_scale;\r\n        }\r\n        this.game_scene.hide_game_tip_car_part();\r\n    },\r\n    \r\n    set_start_pos: function(x, y) {\r\n        this.start_pos = cc.p(x, y);\r\n        this.node.x = x;\r\n        this.node.y = y;\r\n    },\r\n    \r\n    move_back: function() {\r\n        var m = cc.moveTo(0.2, this.start_pos);\r\n        var func = cc.callFunc(function() {\r\n            this.move_hit = false;    \r\n        }.bind(this), this);\r\n        var seq = cc.sequence([m, func]);\r\n        this.node.runAction(seq);\r\n        this.node.active = true;\r\n        this.node.scale = this.start_scale;\r\n        return 0.2;\r\n    },\r\n    \r\n    invalid_hit_move: function() {\r\n        console.log(\"invalid_hit_move\");\r\n        this.move_hit = true;    \r\n    }, \r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}