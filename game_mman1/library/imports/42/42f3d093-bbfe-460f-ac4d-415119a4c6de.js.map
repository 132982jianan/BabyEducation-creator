{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,gBAAQ,EAAE,GAAG;AACb,gBAAQ,EAAE,GAAG;AACb,iBAAS,EAAE,GAAG;AACd,iBAAS,EAAE,GAAG;AACd,kBAAU,EAAE,CAAC;AACb,cAAM,EAAE,KAAK;AACb,mBAAW,EAAE,KAAK;KACrB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAG,IAAI,CAAC,WAAW,EAAE;AACjB,gBAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;;AAED,QAAI,EAAE,gBAAW;AACb,YAAI,OAAO,GAAG,EAAE,CAAA;AAChB,YAAI,IAAI,CAAC,MAAM,EAAE;AACb,gBAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,mBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB,gBAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;AACrB,uBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aAC/C;AACD,gBAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,mBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpB,MACI;AACD,gBAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,mBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB,gBAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;AACrB,uBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aAC/C;AACD,gBAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,mBAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACpB;;AAED,YAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC/B,YAAI,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC9B,YAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACX,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1B;;AAED,QAAI,EAAE,gBAAW;AACb,YAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChC;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        max_time: 0.4,\r\n        min_time: 0.4,\r\n        max_scale: 1.2,\r\n        min_scale: 0.8,\r\n        delay_time: 0,\r\n        is_rev: false,\r\n        play_onload: false,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        if(this.play_onload) {\r\n            this.play();    \r\n        }\r\n    },\r\n    \r\n    play: function() {\r\n        var actions = []\r\n        if (this.is_rev) {\r\n            var s2 = cc.scaleTo(this.min_time, this.min_scale);\r\n            actions.push(s2);\r\n            if (this.delay_time > 0) {\r\n                actions.push(cc.delayTime(this.delay_time));    \r\n            }\r\n            var s1 = cc.scaleTo(this.max_time, this.max_scale);\r\n            actions.push(s1);\r\n        }\r\n        else {\r\n            var s1 = cc.scaleTo(this.max_time, this.max_scale);\r\n            actions.push(s1);\r\n            if (this.delay_time > 0) {\r\n                actions.push(cc.delayTime(this.delay_time));    \r\n            }\r\n            var s2 = cc.scaleTo(this.min_time, this.min_scale);\r\n            actions.push(s2);    \r\n        }\r\n        \r\n        var seq = cc.sequence(actions);\r\n        var f = cc.repeatForever(seq);\r\n        this.f = f;\r\n        this.node.runAction(f);    \r\n    },\r\n    \r\n    stop: function() {\r\n        this.node.stopAction(this.f);    \r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}