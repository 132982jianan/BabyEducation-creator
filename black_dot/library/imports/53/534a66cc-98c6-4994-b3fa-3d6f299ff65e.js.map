{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;AAUR,iBAAS,EAAE;AACP,uBAAS,EAAE;AACX,gBAAI,EAAE,MAAM;SACf;;AAED,kBAAU,EAAE;AACR,uBAAS,EAAE;AACX,gBAAI,EAAE,MAAM;SACf;AACD,uBAAe,EAAE,GAAG;KACvB;;;AAGD,UAAM,EAAE,kBAAY,EACnB;;AAED,eAAW,EAAE,qBAAS,QAAQ,EAAE,KAAK,EAAE;AACnC,YAAI,YAAY,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACvC,YAAI,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9C,YAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC;AACnD,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC5B;;AAED,SAAK,EAAE,iBAAW;AACd,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;;AAEnD,YAAI,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;AACrC,YAAI,CAAC,WAAW,CAAC,CAAA,YAAW;AACxB,gBAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAC3B,gBAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACtD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAA;KACtB;;AAED,iBAAa,EAAE,yBAAW;AACtB,YAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAC3B,YAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACrD,YAAI,CAAC,WAAW,CAAC,CAAA,YAAW;AACxB,gBAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;AAC3B,gBAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SACtD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KACvC;CAKJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        anim_name: {\r\n            default: \"\",\r\n            type: String,\r\n        },\r\n        \r\n        click_anim: {\r\n            default: \"\",\r\n            type: String,\r\n        },\r\n        click_anim_time: 0.5,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n    },\r\n    \r\n    call_latter: function(callfunc, delay) {\r\n        var delay_action = cc.delayTime(delay);\r\n        var call_action = cc.callFunc(callfunc, this);\r\n        var seq = cc.sequence([delay_action, call_action]);\r\n        this.node.runAction(seq);\r\n    },\r\n    \r\n    start: function() {\r\n        this.ske_com = this.node.getComponent(sp.Skeleton);\r\n        \r\n        var time = 0.1 + Math.random() * 0.5;\r\n        this.call_latter(function() {\r\n            this.ske_com.clearTracks();\r\n            this.ske_com.setAnimation(0, this.anim_name, true);\r\n        }.bind(this), time)\r\n    },\r\n    \r\n    on_flow_click: function() {\r\n        this.ske_com.clearTracks();\r\n        this.ske_com.setAnimation(0, this.click_anim, false);\r\n        this.call_latter(function() {\r\n            this.ske_com.clearTracks();\r\n            this.ske_com.setAnimation(0, this.anim_name, true);\r\n        }.bind(this), this.click_anim_time);\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}